
.. _program_listing_file_include_games_algorithms_IPG_ipg_algorithms.h:

Program Listing for File ipg_algorithms.h
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_games_algorithms_IPG_ipg_algorithms.h>` (``include/games/algorithms/IPG/ipg_algorithms.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: none

   /* #############################################
    *             This file is part of
    *                    ZERO
    *
    *             Copyright (c) 2020
    *     Released under the Creative Commons
    *        Zero v1.0 Universal License
    *
    *              Find out more at
    *        https://github.com/ds4dm/ZERO
    * #############################################*/
   
   #pragma once
   #include <games/ipg.h>
   
   #include "zero.h"
   
   namespace Algorithms {
     namespace IPG {
        class Algorithm {
        protected:
           Game::IPG *IPG;
           GRBEnv *   Env;
           bool       Solved{false};     
           bool       Pure{false};       
           bool       Infeasible{false}; 
           double     Tolerance = 1e-6;  
   
        public:
           virtual void solve()          = 0; 
           virtual bool isSolved() const = 0; 
           virtual bool
           isPureStrategy() const = 0; 
           double getTol() const { return Tolerance; }
   
           void setTol(double tol) { this->Tolerance = tol; }
   
           Algorithm(GRBEnv *env, Game::IPG *IPGObj) : IPG{IPGObj}, Env{env} {
             this->Tolerance = this->IPG->Stats.AlgorithmData.DeviationTolerance.get();
           }; 
        };
   
   
     } // namespace IPG
   } // namespace Algorithms
   
   #include "ipg_oracle.h"
